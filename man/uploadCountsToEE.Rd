% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uploadCountsToEE.R
\name{uploadCountsToEE}
\alias{uploadCountsToEE}
\title{Upload counts to Google Earth Engine server}
\usage{
uploadCountsToEE(
  counts,
  asset_id,
  load = TRUE,
  max_counts = 16250,
  max_try = 10
)
}
\arguments{
\item{counts}{An \href{https://github.com/r-spatial/sf}{sf} object with the
spatial location of CWAC counts to upload to GEE. At this stage it should be
reference polygons containing the CWAC site where the counts where made.}

\item{asset_id}{A character string with the name we want our counts to be
saved on the server with.}

\item{load}{If TRUE (default), the GEE asset is loaded into the R session.}

\item{max_counts}{Maximum number of counts the function will try to upload
without splitting into pieces. The default is a sensible choice but you can
try modify it to serve your purposes.}

\item{max_try}{Maximum number of tries the function checks for the creation
of the asset on GEE.}
}
\value{
Counts are uploaded to GEE. In addition a GEE feature collection can
be loaded into the R environment
}
\description{
Upload counts to Google Earth Engine server
}
\details{
An \href{https://github.com/r-spatial/sf}{sf} object is uploaded to GEE servers via
"getInfo_to_asset" (see \link[rgee]{sf_as_ee}). If there are many counts,
the function will upload to objects and merge them in the server under the
name provided. Please be conscious that two intermediate objects will also
be stored under names "p1" and "p2". We recommend visiting your account and
cleaning unnecesary objects regularly.
The creation of the asset might take some time after all the computations are
finished. The function will check every minute during max_try minutes, and if
it is not successful at finding the asset will return an error.
}
\examples{
\dontrun{
# Load CWAC counts
counts <- CWAC::getCwacSiteCounts(23472927)

# Set an ID for your remote asset (data in GEE)
assetId <- sprintf("\%s/\%s", ee_get_assethome(), 'counts')

# Upload to GEE (if not done already - do this only once per asset)
uploadCountsToEE(counts = counts,
                  asset_id = assetId,
                  load = FALSE)

# Load the remote asset to you local computer to work with it
ee_counts <- ee$FeatureCollection(assetId)

# Alternatively we can upload to GEE and load the asset in one call
ee_counts <- uploadCountsToEE(counts = counts,
                                asset_id = assetId,
                                load = TRUE)
}
}
